package Employee_form;

import Language.Language;
import Model.Employee;
import Model.Employee_list;
import Model.Employee_list_interface;
import Thread.runTextThread;
import com.sun.java.accessibility.util.EventID;
import java.awt.Color;
import java.io.IOException;
import static java.lang.String.format;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author XUÂN THÀNH
 */
public class EmployeeManagement_form extends javax.swing.JFrame implements Runnable {
    
    
    private Thread rt,time;
    private boolean read = true, thread = true;
    private Employee_list list;
    private String path;
    private DefaultTableModel dtm;
    private Language lg;

    public EmployeeManagement_form() {
        initComponents();

        setLocationRelativeTo(null);
        this.list = new Employee_list();
        this.lg = new Language(cbbLanguge, lblHoTen, lblLanguge, lblLuong, lblMANV, lblQLNV, tblQLNV, lblTuoi, lblEmail);
        dtm = (DefaultTableModel) this.tblQLNV.getModel();
        time = new Thread(this);
        time.start();
        rt = new runTextThread(lblTexRun);
        rt.start();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFrame1 = new javax.swing.JFrame();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        lblQLNV = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        lblMANV = new javax.swing.JLabel();
        lblHoTen = new javax.swing.JLabel();
        lblTuoi = new javax.swing.JLabel();
        lblEmail = new javax.swing.JLabel();
        lblLuong = new javax.swing.JLabel();
        txtMANV = new javax.swing.JTextField();
        txtHoTen = new javax.swing.JTextField();
        txtTuoi = new javax.swing.JTextField();
        txtEmail = new javax.swing.JTextField();
        txtLuong = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        btnNew = new javax.swing.JButton();
        btnSave = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnFind = new javax.swing.JButton();
        btnOpen = new javax.swing.JButton();
        btnExit = new javax.swing.JButton();
        lblTime = new javax.swing.JLabel();
        cbbLanguge = new javax.swing.JComboBox<>();
        lblLanguge = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        lblErrorTuoi = new javax.swing.JLabel();
        lblErrorHoTen = new javax.swing.JLabel();
        lblErrorEmail = new javax.swing.JLabel();
        lblErrorLuong = new javax.swing.JLabel();
        lblErrorMANV = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblQLNV = new javax.swing.JTable();
        btnFirst = new javax.swing.JButton();
        btnPre = new javax.swing.JButton();
        btnNext = new javax.swing.JButton();
        btnLast = new javax.swing.JButton();
        lblRecord = new javax.swing.JLabel();
        lblTexRun = new javax.swing.JLabel();

        javax.swing.GroupLayout jFrame1Layout = new javax.swing.GroupLayout(jFrame1.getContentPane());
        jFrame1.getContentPane().setLayout(jFrame1Layout);
        jFrame1Layout.setHorizontalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jFrame1Layout.setVerticalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 204));

        lblQLNV.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        lblQLNV.setForeground(new java.awt.Color(255, 51, 51));
        lblQLNV.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblQLNV.setText("QUẢN LÝ NHÂN VIÊN");

        lblMANV.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        lblMANV.setText("MÃ NHÂN VIÊN");
        lblMANV.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        lblHoTen.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        lblHoTen.setText("HỌ VÀ TÊN");

        lblTuoi.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        lblTuoi.setText("TUỔI");

        lblEmail.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        lblEmail.setText("EMAIL");

        lblLuong.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        lblLuong.setText("LƯƠNG");

        jPanel2.setBackground(new java.awt.Color(255, 204, 204));
        jPanel2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        btnNew.setText("NEW");
        btnNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNewActionPerformed(evt);
            }
        });

        btnSave.setText("SAVE");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        btnDelete.setText(" DELETE");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnFind.setText("FIND");
        btnFind.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFindActionPerformed(evt);
            }
        });

        btnOpen.setText("OPEN");
        btnOpen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOpenActionPerformed(evt);
            }
        });

        btnExit.setText("EXIT");
        btnExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExitActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnNew, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnSave, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnDelete, javax.swing.GroupLayout.DEFAULT_SIZE, 108, Short.MAX_VALUE)
                    .addComponent(btnFind, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnOpen, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnExit, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(btnNew)
                .addGap(29, 29, 29)
                .addComponent(btnSave)
                .addGap(30, 30, 30)
                .addComponent(btnDelete)
                .addGap(33, 33, 33)
                .addComponent(btnFind)
                .addGap(29, 29, 29)
                .addComponent(btnOpen)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE)
                .addComponent(btnExit)
                .addGap(17, 17, 17))
        );

        lblTime.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        lblTime.setForeground(new java.awt.Color(255, 0, 0));
        lblTime.setText("10:10:10");

        cbbLanguge.setBackground(new java.awt.Color(204, 255, 204));
        cbbLanguge.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Tiếng Việt", "English", "日本語" }));
        cbbLanguge.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbbLangugeActionPerformed(evt);
            }
        });

        lblLanguge.setText("Ngôn Ngữ:");

        lblErrorTuoi.setFont(new java.awt.Font("Arial", 2, 11)); // NOI18N
        lblErrorTuoi.setForeground(new java.awt.Color(255, 51, 51));

        lblErrorHoTen.setFont(new java.awt.Font("Arial", 2, 11)); // NOI18N
        lblErrorHoTen.setForeground(new java.awt.Color(255, 51, 51));

        lblErrorEmail.setFont(new java.awt.Font("Arial", 2, 11)); // NOI18N
        lblErrorEmail.setForeground(new java.awt.Color(255, 51, 51));

        lblErrorLuong.setFont(new java.awt.Font("Arial", 2, 11)); // NOI18N
        lblErrorLuong.setForeground(new java.awt.Color(255, 51, 51));

        lblErrorMANV.setFont(new java.awt.Font("Arial", 2, 11)); // NOI18N
        lblErrorMANV.setForeground(new java.awt.Color(255, 51, 51));

        tblQLNV.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        tblQLNV.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã", "Họ Tên", "Tuổi", "Email", "Lương"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, true, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblQLNV.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblQLNVMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblQLNV);

        btnFirst.setFont(new java.awt.Font("Algerian", 1, 11)); // NOI18N
        btnFirst.setText("|<");
        btnFirst.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFirstActionPerformed(evt);
            }
        });

        btnPre.setFont(new java.awt.Font("Algerian", 1, 11)); // NOI18N
        btnPre.setText("<<");
        btnPre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPreActionPerformed(evt);
            }
        });

        btnNext.setFont(new java.awt.Font("Algerian", 1, 11)); // NOI18N
        btnNext.setText(">>");
        btnNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNextActionPerformed(evt);
            }
        });

        btnLast.setFont(new java.awt.Font("Algerian", 1, 11)); // NOI18N
        btnLast.setText(">|");
        btnLast.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLastActionPerformed(evt);
            }
        });

        lblRecord.setForeground(new java.awt.Color(255, 51, 51));
        lblRecord.setText("Record: 0 of 0");

        lblTexRun.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        lblTexRun.setText("                   -----         @design by Xuân Thành        ----                       ");
        lblTexRun.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                lblTexRunAncestorAdded(evt);
            }
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        lblTexRun.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                lblTexRunMouseMoved(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator1)
            .addComponent(jSeparator2, javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(99, 99, 99)
                        .addComponent(lblQLNV, javax.swing.GroupLayout.PREFERRED_SIZE, 397, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblLanguge, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cbbLanguge, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane2))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(lblErrorTuoi, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 332, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(lblErrorHoTen, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 332, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(lblErrorEmail, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 332, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(lblErrorMANV, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 332, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(100, 100, 100))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                        .addComponent(lblErrorLuong, javax.swing.GroupLayout.PREFERRED_SIZE, 332, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(102, 102, 102))))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(47, 47, 47)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(lblLuong, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(lblEmail, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(lblTuoi, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(lblHoTen, javax.swing.GroupLayout.DEFAULT_SIZE, 78, Short.MAX_VALUE))
                                    .addComponent(lblMANV, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(35, 35, 35)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(btnFirst)
                                        .addGap(18, 18, 18)
                                        .addComponent(btnPre, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(btnNext, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(btnLast)
                                        .addGap(26, 26, 26)
                                        .addComponent(lblRecord, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(txtMANV, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(txtHoTen)
                                        .addComponent(txtTuoi, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 398, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(txtLuong, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblTime, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(lblTexRun, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cbbLanguge, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblLanguge))
                        .addGap(30, 30, 30))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(lblQLNV, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(38, 38, 38)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblMANV)
                            .addComponent(txtMANV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(lblErrorHoTen, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(9, 9, 9)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblHoTen)
                            .addComponent(txtHoTen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(15, 15, 15)
                        .addComponent(lblErrorTuoi, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblTuoi)
                            .addComponent(txtTuoi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(lblErrorEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblEmail)
                            .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(lblErrorLuong, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(4, 4, 4)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblLuong)
                            .addComponent(txtLuong, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblTime, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblErrorMANV, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 13, Short.MAX_VALUE)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnFirst)
                    .addComponent(btnPre)
                    .addComponent(btnNext)
                    .addComponent(btnLast)
                    .addComponent(lblRecord))
                .addGap(18, 18, 18)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblTexRun, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cbbLangugeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbbLangugeActionPerformed

        this.lg.language();
    }//GEN-LAST:event_cbbLangugeActionPerformed

    private void btnNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNewActionPerformed
        clearForm();
    }//GEN-LAST:event_btnNewActionPerformed

    private void tblQLNVMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblQLNVMouseClicked
        MouseClick();
    }//GEN-LAST:event_tblQLNVMouseClicked

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        save();
    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        delete();
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExitActionPerformed
        exit();
    }//GEN-LAST:event_btnExitActionPerformed

    private void btnOpenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOpenActionPerformed
        
        open();
    }//GEN-LAST:event_btnOpenActionPerformed

    private void btnFindActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFindActionPerformed
        findByID();
    }//GEN-LAST:event_btnFindActionPerformed

    private void btnFirstActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFirstActionPerformed
        this.list.first();
        fillForm(this.list.getCurrentEmployeeIndex());
    }//GEN-LAST:event_btnFirstActionPerformed

    private void btnLastActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLastActionPerformed
        this.list.last();
        fillForm(this.list.getCurrentEmployeeIndex());
    }//GEN-LAST:event_btnLastActionPerformed

    private void btnPreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPreActionPerformed
        this.list.pre();
        fillForm(this.list.getCurrentEmployeeIndex());
    }//GEN-LAST:event_btnPreActionPerformed

    private void btnNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNextActionPerformed
        this.list.next();
        fillForm(this.list.getCurrentEmployeeIndex());
    }//GEN-LAST:event_btnNextActionPerformed

    private void lblTexRunMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblTexRunMouseMoved
        if (thread == true) {
            rt.suspend();
            thread = false;
        } else {
            rt.resume();
            thread = true;
        }
    }//GEN-LAST:event_lblTexRunMouseMoved

    private void lblTexRunAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_lblTexRunAncestorAdded
        
    }//GEN-LAST:event_lblTexRunAncestorAdded



    @Override //run oclock
    public void run() {

        while (true) {
            Calendar now = Calendar.getInstance();
            int hour = now.get(Calendar.HOUR_OF_DAY);
            int minute = now.get(Calendar.MINUTE);
            int second = now.get(Calendar.SECOND);

            String txt = hour + ":" + minute + ":" + second;
            this.lblTime.setText(txt);

            try {
                Thread.sleep(1000);
            } catch (InterruptedException ex) {
                ex.printStackTrace();
            }
        }
    }

    private void fillTable() {
        

        dtm.setRowCount(0);

        ArrayList<Employee> ds = this.list.getList();
        for (int i = 0; i < ds.size(); i++) {
            Employee nv = (Employee) ds.get(i);

            Object[] rowData = new Object[]{
                nv.getManv(),
                nv.getHoTen(),
                nv.getTuoi(),
                nv.getEmail(),
                format("%.2f", nv.getLuong())
            };

            dtm.addRow(rowData);
            
        }
    }

    public void fillForm(int index) {
        Employee nv = (Employee) this.list.getList().get(index);

        this.txtMANV.setText(nv.getManv());
        this.txtHoTen.setText(nv.getHoTen());
        this.txtTuoi.setText(Integer.toString(nv.getTuoi()));
        this.txtEmail.setText(nv.getEmail());
        this.txtLuong.setText(String.valueOf(format("%.2f", nv.getLuong())));
        this.lblRecord.setText("Record: " + (index + 1) + " of " + this.list.getList().size());

        if (index <= 0) {
            this.btnFirst.setEnabled(false);
            this.btnPre.setEnabled(false);
            this.btnLast.setEnabled(true);
            this.btnNext.setEnabled(true);
        } else if (index >= this.list.getList().size() - 1) {
            btnFirst.setEnabled(true);
            btnPre.setEnabled(true);
            btnLast.setEnabled(false);
            btnNext.setEnabled(false);
        } else {
            btnFirst.setEnabled(true);
            btnPre.setEnabled(true);
            btnLast.setEnabled(true);
            btnNext.setEnabled(true);
        }
    }

    public void findByID() {
        if (read == true) {
            JOptionPane.showMessageDialog(this, "Chưa Open file!");
            return;
        }
        String ID = this.txtMANV.getText();

        if (ID.equals("")) {
            JOptionPane.showMessageDialog(this, "Bạn phải nhập mã nhân viên!");
            return;
        }

        int index = this.list.getList().indexOf(this.list.findByID(ID));

        if (index == -1) {
            JOptionPane.showMessageDialog(this, "Không tìm thấy nhân viên nào có mã: " + ID);
        }
        fillForm(index);
    }

    public void open() {
        this.path = JOptionPane.showInputDialog("Nhập đường dẫn đến file chứa danh sách");
        
        Employee_list listNV = new Employee_list();
        
        if (read == false) {
            JOptionPane.showMessageDialog(this, "File đã được mở");
            return;
        } else {
            try {
                listNV = (Employee_list) Employee_list.read(path);
                this.read = false;

            } catch (IOException ex) {
                ex.printStackTrace();
                JOptionPane.showMessageDialog(this, "đọc file thất bại");
            } catch (ClassNotFoundException ex) {
                ex.printStackTrace();
                JOptionPane.showMessageDialog(this, "đọc file thất bại");
            }
            for (Employee nv : listNV.getList()) {
                this.list.Add(nv);
            }

        }

        this.fillTable();
        fillForm(0);
    }

    public void exit() {
        try {
            Employee_list.write(path, this.list);
        } catch (IOException ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this, "Ghi file thất bại");
            return;
        }
        System.exit(0);
    }

    public void delete() {
        if (read == true) {
            JOptionPane.showMessageDialog(this, "Chưa Open file!");
            return;
        }
        String ID = this.txtMANV.getText();

        if (ID.equals("")) {
            JOptionPane.showMessageDialog(this, "Bạn phải nhập mã nhân viên!");
            return;
        }
        int xacNhan = JOptionPane.showConfirmDialog(this, "Bạn có chắc muốn xóa bản ghi không?");

        if (xacNhan == JOptionPane.YES_OPTION) {
            boolean a = this.list.RemoveByID(ID);
            if (a == false) {
                JOptionPane.showMessageDialog(this, "Xóa nhân viên thất bại, không tìm thấy nhân viên nào có mã: " + ID);
                return;
            }
            JOptionPane.showMessageDialog(this, "Xóa nhân viên thành công");
            fillTable();
        } else if (xacNhan == JOptionPane.NO_OPTION) {
            return;
        } else if (xacNhan == JOptionPane.CANCEL_OPTION) {
            return;
        }

    }

    public void save() {
        if (read == true) {
            JOptionPane.showMessageDialog(this, "Chưa Open file!");
            return;
        }
        if (checkForm() == false) {
            return;
        }

        if (list.getCurrentEmployeeIndex() == -1) {
            if (this.list.findByID(this.txtMANV.getText()) != null) {
                JOptionPane.showMessageDialog(this, "Mã nhân viên đã tồn tại");
                return;
            }
            this.list.Add(getDanhSach());

        } else {
            if (this.list.findByID(this.txtMANV.getText()) == this.list.getCurrentEmployee()) {
                this.list.Update(list.getCurrentEmployeeIndex(), getDanhSach());
            } else if (this.list.findByID(this.txtMANV.getText()) != null) {

                JOptionPane.showMessageDialog(this, "Mã nhân viên đã tồn tại");
                return;
            } else {
                this.list.Update(list.getCurrentEmployeeIndex(), getDanhSach());
            }

        }

        fillTable();
        clearForm();
        JOptionPane.showMessageDialog(this, "Lưu thành công");
    }

    public void MouseClick() {
        list.setCurrentIndex(this.tblQLNV.getSelectedRow());
        if (list.getCurrentEmployeeIndex() == -1) {
            return;
        }
        fillForm(list.getCurrentEmployeeIndex());
    }

  

    public void clearForm() {
        this.txtEmail.setText("");
        this.txtHoTen.setText("");
        this.txtLuong.setText("");
        this.txtMANV.setText("");
        this.txtTuoi.setText("");

        this.lblErrorMANV.setText("");
        this.lblErrorEmail.setText("");
        this.lblErrorHoTen.setText("");
        this.lblErrorLuong.setText("");
        this.lblErrorTuoi.setText("");

        this.txtTuoi.setBackground(Color.white);
        this.txtEmail.setBackground(Color.white);
        this.txtMANV.setBackground(Color.white);
        this.txtLuong.setBackground(Color.white);
        this.txtHoTen.setBackground(Color.white);
        this.list.setCurrentIndex(-1);
        fillTable();
        this.lblRecord.setText("Record: " + (0) + " of " + this.list.getList().size());
    }

    public boolean checkForm() {
        boolean a = true;
        String manv = this.txtMANV.getText();
        String hoTen = this.txtHoTen.getText();
        String tuoi = this.txtTuoi.getText();
        String email = this.txtEmail.getText();
        String luong = this.txtLuong.getText();
        int index = this.cbbLanguge.getSelectedIndex();

//Validate mã nhân viên        
        if (manv.equals("")) {
            if (index == 0) {
                this.lblErrorMANV.setText("Mã Nhân viên không được để trống!");
            } else {
                this.lblErrorMANV.setText("Employee ID cannot be empty!");
            }
            this.txtMANV.setBackground(Color.red);
            a = false;
        } else {
            this.lblErrorMANV.setText("");
            this.txtMANV.setBackground(Color.white);
        }

//Validate Họ Và Tên
        if (hoTen.equals("")) {
            if (index == 0) {
                this.lblErrorHoTen.setText("Họ tên không được để trống!");
            } else {
                this.lblErrorHoTen.setText("Fullname cannot be empty!");
            }
            this.txtHoTen.setBackground(Color.red);
            a = false;
        } else {
            this.lblErrorHoTen.setText("");
            this.txtHoTen.setBackground(Color.white);
        }

//validate tuổi 
        if (tuoi.equals("")) {
            if (index == 0) {
                this.lblErrorTuoi.setText("Tuổi không được để trống!");
            } else {
                this.lblErrorTuoi.setText("Age cannot be empty!");
            }
            this.txtTuoi.setBackground(Color.red);
            a = false;
        } else {
            this.lblErrorTuoi.setText("");
            this.txtTuoi.setBackground(Color.white);
        }
        if (tuoi.equals("") == false) {
            try {
                int age = Integer.parseInt(tuoi);
                if (age < 16 || age > 55) {
                    if (index == 0) {
                        this.lblErrorTuoi.setText("Tuổi phải từ 16 -> 55!");
                    } else {
                        this.lblErrorTuoi.setText("Age must be from 16 -> 55!");
                    }
                    this.txtTuoi.setBackground(Color.red);
                    a = false;
                }
            } catch (NumberFormatException e) {
                e.printStackTrace();
                if (index == 0) {
                    this.lblErrorTuoi.setText("Tuổi không hợp lệ!");
                } else {
                    this.lblErrorTuoi.setText("Invalid age!");
                }
                this.txtTuoi.setBackground(Color.red);
                a = false;
            }
        }

//validate Email 
        if (email.equals("")) {
            if (index == 0) {
                this.lblErrorEmail.setText("Email không được để trống!");
            } else {
                this.lblErrorEmail.setText("Email cannot be empty!");
            }
            this.txtEmail.setBackground(Color.red);
            a = false;
        } else {
            this.lblErrorEmail.setText("");
            this.txtEmail.setBackground(Color.white);
        }
        Pattern p = Pattern.compile("\\w+@\\w+\\.\\w+\\.\\w");
        Matcher m = p.matcher(email);

        if (!m.find()) {
            if (index == 0) {
                this.lblErrorEmail.setText("Email không đúng định dạng!");
            } else {
                this.lblErrorEmail.setText("Incorrect email format!");
            }
            this.txtEmail.setBackground(Color.red);
            a = false;
        }

//validate lương
        if (luong.equals("")) {
            if (index == 0) {
                this.lblErrorLuong.setText("Luong không được để trống!");
            } else {
                this.lblErrorLuong.setText("Salary cannot be empty!");
            }
            this.txtLuong.setBackground(Color.red);
            a = false;

        } else {
            this.lblErrorLuong.setText("");
            this.txtLuong.setBackground(Color.white);
        }

        if (luong.equals("") == false) {
            try {
                double salary = Double.parseDouble(luong);
                if (salary < 0) {
                    if (index == 0) {
                        this.lblErrorLuong.setText("lương phải lớn hơn 0!");
                    } else {
                        this.lblErrorLuong.setText("salary must be greater than 0!");
                    }
                    this.txtLuong.setBackground(Color.red);
                    a = false;

                } else {
                    if (salary < 5000000) {
                        if (index == 0) {
                            this.lblErrorLuong.setText("lương phải lớn hơn 5000000!");
                        } else {
                            this.lblErrorLuong.setText("salary must be greater than 5000000!");
                        }
                        this.txtLuong.setBackground(Color.red);
                        a = false;

                    }
                }
            } catch (NumberFormatException e) {
                e.printStackTrace();
                if (index == 0) {
                    this.lblErrorLuong.setText("Lương không hợp lệ!");

                } else {
                    this.lblErrorLuong.setText("Invalid salary!");

                }
                this.txtLuong.setBackground(Color.red);
                a = false;
            }

        }

        return a;
    }

    public Employee getDanhSach() {
        String id, hoTen, email;
        double luong;
        int tuoi;

        id = this.txtMANV.getText();
        hoTen = this.txtHoTen.getText();
        tuoi = Integer.parseInt(this.txtTuoi.getText());
        email = this.txtEmail.getText();
        luong = Double.parseDouble(this.txtLuong.getText());

        Employee nv = new Employee(id, hoTen, email, luong, tuoi);

        return nv;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EmployeeManagement_form.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EmployeeManagement_form.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EmployeeManagement_form.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EmployeeManagement_form.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new EmployeeManagement_form().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnExit;
    private javax.swing.JButton btnFind;
    private javax.swing.JButton btnFirst;
    private javax.swing.JButton btnLast;
    private javax.swing.JButton btnNew;
    private javax.swing.JButton btnNext;
    private javax.swing.JButton btnOpen;
    private javax.swing.JButton btnPre;
    private javax.swing.JButton btnSave;
    private javax.swing.JComboBox<String> cbbLanguge;
    private javax.swing.JFrame jFrame1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel lblEmail;
    private javax.swing.JLabel lblErrorEmail;
    private javax.swing.JLabel lblErrorHoTen;
    private javax.swing.JLabel lblErrorLuong;
    private javax.swing.JLabel lblErrorMANV;
    private javax.swing.JLabel lblErrorTuoi;
    private javax.swing.JLabel lblHoTen;
    private javax.swing.JLabel lblLanguge;
    private javax.swing.JLabel lblLuong;
    private javax.swing.JLabel lblMANV;
    private javax.swing.JLabel lblQLNV;
    private javax.swing.JLabel lblRecord;
    private javax.swing.JLabel lblTexRun;
    private javax.swing.JLabel lblTime;
    private javax.swing.JLabel lblTuoi;
    private javax.swing.JTable tblQLNV;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtHoTen;
    private javax.swing.JTextField txtLuong;
    private javax.swing.JTextField txtMANV;
    private javax.swing.JTextField txtTuoi;
    // End of variables declaration//GEN-END:variables

}
